{"ast":null,"code":"import loader from '@monaco-editor/loader';\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MonacoContainer from '../MonacoContainer/index.js';\nimport useMount from '../hooks/useMount/index.js';\nimport useUpdate from '../hooks/useUpdate/index.js';\nimport { noop } from '../utils/index.js';\n\nfunction DiffEditor({\n  original,\n  modified,\n  language,\n  originalLanguage,\n  modifiedLanguage,\n\n  /* === */\n  originalModelPath,\n  modifiedModelPath,\n  keepCurrentOriginalModel,\n  keepCurrentModifiedModel,\n  theme,\n  loading,\n  options,\n\n  /* === */\n  height,\n  width,\n  className,\n  wrapperClassName,\n\n  /* === */\n  beforeMount,\n  onMount\n}) {\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [isMonacoMounting, setIsMonacoMounting] = useState(true);\n  const editorRef = useRef(null);\n  const monacoRef = useRef(null);\n  const containerRef = useRef(null);\n  const onMountRef = useRef(onMount);\n  const beforeMountRef = useRef(beforeMount);\n  useMount(() => {\n    const cancelable = loader.init();\n    cancelable.then(monaco => (monacoRef.current = monaco) && setIsMonacoMounting(false)).catch(error => (error === null || error === void 0 ? void 0 : error.type) !== 'cancelation' && console.error('Monaco initialization: error:', error));\n    return () => editorRef.current ? disposeEditor() : cancelable.cancel();\n  });\n  useUpdate(() => {\n    const modifiedEditor = editorRef.current.getModifiedEditor();\n\n    if (modifiedEditor.getOption(monacoRef.current.editor.EditorOption.readOnly)) {\n      modifiedEditor.setValue(modified);\n    } else {\n      if (modified !== modifiedEditor.getValue()) {\n        modifiedEditor.executeEdits('', [{\n          range: modifiedEditor.getModel().getFullModelRange(),\n          text: modified,\n          forceMoveMarkers: true\n        }]);\n        modifiedEditor.pushUndoStop();\n      }\n    }\n  }, [modified], isEditorReady);\n  useUpdate(() => {\n    editorRef.current.getModel().original.setValue(original);\n  }, [original], isEditorReady);\n  useUpdate(() => {\n    const {\n      original,\n      modified\n    } = editorRef.current.getModel();\n    monacoRef.current.editor.setModelLanguage(original, originalLanguage || language);\n    monacoRef.current.editor.setModelLanguage(modified, modifiedLanguage || language);\n  }, [language, originalLanguage, modifiedLanguage], isEditorReady);\n  useUpdate(() => {\n    monacoRef.current.editor.setTheme(theme);\n  }, [theme], isEditorReady);\n  useUpdate(() => {\n    editorRef.current.updateOptions(options);\n  }, [options], isEditorReady);\n  const setModels = useCallback(() => {\n    beforeMountRef.current(monacoRef.current);\n    const originalModel = monacoRef.current.editor.createModel(original, originalLanguage || language, originalModelPath && monacoRef.current.Uri.parse(originalModelPath));\n    const modifiedModel = monacoRef.current.editor.createModel(modified, modifiedLanguage || language, modifiedModelPath && monacoRef.current.Uri.parse(modifiedModelPath));\n    editorRef.current.setModel({\n      original: originalModel,\n      modified: modifiedModel\n    });\n  }, [language, modified, modifiedLanguage, original, originalLanguage, originalModelPath, modifiedModelPath]);\n  const createEditor = useCallback(() => {\n    editorRef.current = monacoRef.current.editor.createDiffEditor(containerRef.current, {\n      automaticLayout: true,\n      ...options\n    });\n    setModels();\n    monacoRef.current.editor.setTheme(theme);\n    setIsEditorReady(true);\n  }, [options, theme, setModels]);\n  useEffect(() => {\n    if (isEditorReady) {\n      onMountRef.current(editorRef.current, monacoRef.current);\n    }\n  }, [isEditorReady]);\n  useEffect(() => {\n    !isMonacoMounting && !isEditorReady && createEditor();\n  }, [isMonacoMounting, isEditorReady, createEditor]);\n\n  function disposeEditor() {\n    const models = editorRef.current.getModel();\n\n    if (!keepCurrentOriginalModel) {\n      var _models$original;\n\n      (_models$original = models.original) === null || _models$original === void 0 ? void 0 : _models$original.dispose();\n    }\n\n    if (!keepCurrentModifiedModel) {\n      var _models$modified;\n\n      (_models$modified = models.modified) === null || _models$modified === void 0 ? void 0 : _models$modified.dispose();\n    }\n\n    editorRef.current.dispose();\n  }\n\n  return /*#__PURE__*/React.createElement(MonacoContainer, {\n    width: width,\n    height: height,\n    isEditorReady: isEditorReady,\n    loading: loading,\n    _ref: containerRef,\n    className: className,\n    wrapperClassName: wrapperClassName\n  });\n}\n\nDiffEditor.propTypes = {\n  original: PropTypes.string,\n  modified: PropTypes.string,\n  language: PropTypes.string,\n  originalLanguage: PropTypes.string,\n  modifiedLanguage: PropTypes.string,\n\n  /* === */\n  originalModelPath: PropTypes.string,\n  modifiedModelPath: PropTypes.string,\n  keepCurrentOriginalModel: PropTypes.bool,\n  keepCurrentModifiedModel: PropTypes.bool,\n  theme: PropTypes.string,\n  loading: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  options: PropTypes.object,\n\n  /* === */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n\n  /* === */\n  beforeMount: PropTypes.func,\n  onMount: PropTypes.func\n};\nDiffEditor.defaultProps = {\n  theme: 'light',\n  loading: 'Loading...',\n  options: {},\n  keepCurrentOriginalModel: false,\n  keepCurrentModifiedModel: false,\n\n  /* === */\n  width: '100%',\n  height: '100%',\n\n  /* === */\n  beforeMount: noop,\n  onMount: noop\n};\nexport default DiffEditor;","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/node_modules/@monaco-editor/react/lib/es/DiffEditor/DiffEditor.js"],"names":["loader","React","useState","useRef","useCallback","useEffect","PropTypes","MonacoContainer","useMount","useUpdate","noop","DiffEditor","original","modified","language","originalLanguage","modifiedLanguage","originalModelPath","modifiedModelPath","keepCurrentOriginalModel","keepCurrentModifiedModel","theme","loading","options","height","width","className","wrapperClassName","beforeMount","onMount","isEditorReady","setIsEditorReady","isMonacoMounting","setIsMonacoMounting","editorRef","monacoRef","containerRef","onMountRef","beforeMountRef","cancelable","init","then","monaco","current","catch","error","type","console","disposeEditor","cancel","modifiedEditor","getModifiedEditor","getOption","editor","EditorOption","readOnly","setValue","getValue","executeEdits","range","getModel","getFullModelRange","text","forceMoveMarkers","pushUndoStop","setModelLanguage","setTheme","updateOptions","setModels","originalModel","createModel","Uri","parse","modifiedModel","setModel","createEditor","createDiffEditor","automaticLayout","models","_models$original","dispose","_models$modified","createElement","_ref","propTypes","string","bool","oneOfType","element","object","number","func","defaultProps"],"mappings":"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","sourcesContent":["import loader from '@monaco-editor/loader';\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MonacoContainer from '../MonacoContainer/index.js';\nimport useMount from '../hooks/useMount/index.js';\nimport useUpdate from '../hooks/useUpdate/index.js';\nimport { noop } from '../utils/index.js';\n\nfunction DiffEditor({\n  original,\n  modified,\n  language,\n  originalLanguage,\n  modifiedLanguage,\n\n  /* === */\n  originalModelPath,\n  modifiedModelPath,\n  keepCurrentOriginalModel,\n  keepCurrentModifiedModel,\n  theme,\n  loading,\n  options,\n\n  /* === */\n  height,\n  width,\n  className,\n  wrapperClassName,\n\n  /* === */\n  beforeMount,\n  onMount\n}) {\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [isMonacoMounting, setIsMonacoMounting] = useState(true);\n  const editorRef = useRef(null);\n  const monacoRef = useRef(null);\n  const containerRef = useRef(null);\n  const onMountRef = useRef(onMount);\n  const beforeMountRef = useRef(beforeMount);\n  useMount(() => {\n    const cancelable = loader.init();\n    cancelable.then(monaco => (monacoRef.current = monaco) && setIsMonacoMounting(false)).catch(error => (error === null || error === void 0 ? void 0 : error.type) !== 'cancelation' && console.error('Monaco initialization: error:', error));\n    return () => editorRef.current ? disposeEditor() : cancelable.cancel();\n  });\n  useUpdate(() => {\n    const modifiedEditor = editorRef.current.getModifiedEditor();\n\n    if (modifiedEditor.getOption(monacoRef.current.editor.EditorOption.readOnly)) {\n      modifiedEditor.setValue(modified);\n    } else {\n      if (modified !== modifiedEditor.getValue()) {\n        modifiedEditor.executeEdits('', [{\n          range: modifiedEditor.getModel().getFullModelRange(),\n          text: modified,\n          forceMoveMarkers: true\n        }]);\n        modifiedEditor.pushUndoStop();\n      }\n    }\n  }, [modified], isEditorReady);\n  useUpdate(() => {\n    editorRef.current.getModel().original.setValue(original);\n  }, [original], isEditorReady);\n  useUpdate(() => {\n    const {\n      original,\n      modified\n    } = editorRef.current.getModel();\n    monacoRef.current.editor.setModelLanguage(original, originalLanguage || language);\n    monacoRef.current.editor.setModelLanguage(modified, modifiedLanguage || language);\n  }, [language, originalLanguage, modifiedLanguage], isEditorReady);\n  useUpdate(() => {\n    monacoRef.current.editor.setTheme(theme);\n  }, [theme], isEditorReady);\n  useUpdate(() => {\n    editorRef.current.updateOptions(options);\n  }, [options], isEditorReady);\n  const setModels = useCallback(() => {\n    beforeMountRef.current(monacoRef.current);\n    const originalModel = monacoRef.current.editor.createModel(original, originalLanguage || language, originalModelPath && monacoRef.current.Uri.parse(originalModelPath));\n    const modifiedModel = monacoRef.current.editor.createModel(modified, modifiedLanguage || language, modifiedModelPath && monacoRef.current.Uri.parse(modifiedModelPath));\n    editorRef.current.setModel({\n      original: originalModel,\n      modified: modifiedModel\n    });\n  }, [language, modified, modifiedLanguage, original, originalLanguage, originalModelPath, modifiedModelPath]);\n  const createEditor = useCallback(() => {\n    editorRef.current = monacoRef.current.editor.createDiffEditor(containerRef.current, {\n      automaticLayout: true,\n      ...options\n    });\n    setModels();\n    monacoRef.current.editor.setTheme(theme);\n    setIsEditorReady(true);\n  }, [options, theme, setModels]);\n  useEffect(() => {\n    if (isEditorReady) {\n      onMountRef.current(editorRef.current, monacoRef.current);\n    }\n  }, [isEditorReady]);\n  useEffect(() => {\n    !isMonacoMounting && !isEditorReady && createEditor();\n  }, [isMonacoMounting, isEditorReady, createEditor]);\n\n  function disposeEditor() {\n    const models = editorRef.current.getModel();\n\n    if (!keepCurrentOriginalModel) {\n      var _models$original;\n\n      (_models$original = models.original) === null || _models$original === void 0 ? void 0 : _models$original.dispose();\n    }\n\n    if (!keepCurrentModifiedModel) {\n      var _models$modified;\n\n      (_models$modified = models.modified) === null || _models$modified === void 0 ? void 0 : _models$modified.dispose();\n    }\n\n    editorRef.current.dispose();\n  }\n\n  return /*#__PURE__*/React.createElement(MonacoContainer, {\n    width: width,\n    height: height,\n    isEditorReady: isEditorReady,\n    loading: loading,\n    _ref: containerRef,\n    className: className,\n    wrapperClassName: wrapperClassName\n  });\n}\n\nDiffEditor.propTypes = {\n  original: PropTypes.string,\n  modified: PropTypes.string,\n  language: PropTypes.string,\n  originalLanguage: PropTypes.string,\n  modifiedLanguage: PropTypes.string,\n\n  /* === */\n  originalModelPath: PropTypes.string,\n  modifiedModelPath: PropTypes.string,\n  keepCurrentOriginalModel: PropTypes.bool,\n  keepCurrentModifiedModel: PropTypes.bool,\n  theme: PropTypes.string,\n  loading: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  options: PropTypes.object,\n\n  /* === */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n\n  /* === */\n  beforeMount: PropTypes.func,\n  onMount: PropTypes.func\n};\nDiffEditor.defaultProps = {\n  theme: 'light',\n  loading: 'Loading...',\n  options: {},\n  keepCurrentOriginalModel: false,\n  keepCurrentModifiedModel: false,\n\n  /* === */\n  width: '100%',\n  height: '100%',\n\n  /* === */\n  beforeMount: noop,\n  onMount: noop\n};\n\nexport default DiffEditor;\n"]},"metadata":{},"sourceType":"module"}