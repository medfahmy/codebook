{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/components/code-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport CodeEditor from \"components/code-editor\";\nimport Preview from \"components/preview\";\nimport bundle from \"bundler\";\nimport \"bulmaswatch/superhero/bulmaswatch.min.css\";\nimport Resizable from \"./resizable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeCell = function () {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n\n  const onClick = async () => {};\n\n  useEffect(() => {\n    setTimeout(async () => {\n      setCode(await bundle(input));\n    }, 1000);\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Resizable, {\n        direction: \"horizontal\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          initialValue: \"const a = 1;\",\n          onChange: value => setInput(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        code: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodeCell, \"bHb4HaoOKBlHGXAU6T8jxrhUxBs=\");\n\n_c = CodeCell;\nexport default CodeCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/components/code-cell.tsx"],"names":["useState","useEffect","CodeEditor","Preview","bundle","Resizable","CodeCell","input","setInput","code","setCode","onClick","setTimeout","height","display","flexDirection","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAO,2CAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,QAAQ,GAAG,YAAY;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,OAAO,GAAG,YAAY,CAAE,CAA9B;;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,YAAY;AACrBF,MAAAA,OAAO,CAAC,MAAMN,MAAM,CAACG,KAAD,CAAb,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,OAAO,EAAE,MAA3B;AAAmCC,QAAAA,aAAa,EAAE;AAAlD,OAAZ;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,YAAY,EAAC,cADf;AAEE,UAAA,QAAQ,EAAGC,KAAD,IAAWR,QAAQ,CAACQ,KAAD;AAF/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEP;AAAf;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAzBD;;GAAMH,Q;;KAAAA,Q;AA2BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport CodeEditor from \"components/code-editor\";\nimport Preview from \"components/preview\";\nimport bundle from \"bundler\";\nimport \"bulmaswatch/superhero/bulmaswatch.min.css\";\nimport Resizable from \"./resizable\";\n\nconst CodeCell = function () {\n  const [input, setInput] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n\n  const onClick = async () => {};\n\n  useEffect(() => {\n    setTimeout(async () => {\n      setCode(await bundle(input));\n    }, 1000);\n  }, [input]);\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n        <Resizable direction=\"horizontal\">\n          <CodeEditor\n            initialValue=\"const a = 1;\"\n            onChange={(value) => setInput(value)}\n          />\n        </Resizable>\n        <Preview code={code} />\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeCell;\n"]},"metadata":{},"sourceType":"module"}