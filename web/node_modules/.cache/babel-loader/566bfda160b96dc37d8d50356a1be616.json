{"ast":null,"code":"import { ActionType } from \"state/action-types\";\nconst initialState = {\n  loading: false,\n  error: null,\n  order: [],\n  data: {}\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionType.MOVE_CELL:\n      return state;\n\n    case ActionType.UPDATE_CELL:\n      const {\n        id,\n        content\n      } = action.payload;\n      return { ...state,\n        data: { ...state.data,\n          [id]: { ...state.data[id],\n            content\n          }\n        }\n      };\n\n    case ActionType.INSERT_CELL_BEFORE:\n      return state;\n\n    case ActionType.DELETE_CELL:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/state/reducers/cell-reducer.ts"],"names":["ActionType","initialState","loading","error","order","data","reducer","state","action","type","MOVE_CELL","UPDATE_CELL","id","content","payload","INSERT_CELL_BEFORE","DELETE_CELL"],"mappings":"AAAA,SAASA,UAAT,QAA2B,oBAA3B;AAaA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,KADqB;AAE9BC,EAAAA,KAAK,EAAE,IAFuB;AAG9BC,EAAAA,KAAK,EAAE,EAHuB;AAI9BC,EAAAA,IAAI,EAAE;AAJwB,CAAhC;AAOA,eAAe,SAASC,OAAT,CACbC,KAAgB,GAAGN,YADN,EAEbO,MAFa,EAGF;AACX,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,UAAU,CAACU,SAAhB;AACE,aAAOH,KAAP;;AACF,SAAKP,UAAU,CAACW,WAAhB;AACE,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAkBL,MAAM,CAACM,OAA/B;AACA,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,IAAI,EAAE,EACJ,GAAGE,KAAK,CAACF,IADL;AAEJ,WAACO,EAAD,GAAM,EACJ,GAAGL,KAAK,CAACF,IAAN,CAAWO,EAAX,CADC;AAEJC,YAAAA;AAFI;AAFF;AAFD,OAAP;;AAUF,SAAKb,UAAU,CAACe,kBAAhB;AACE,aAAOR,KAAP;;AACF,SAAKP,UAAU,CAACgB,WAAhB;AACE,aAAOT,KAAP;AAlBJ;AAoBD","sourcesContent":["import { ActionType } from \"state/action-types\";\nimport { Action } from \"state/actions\";\nimport { Cell } from \"state/cell\";\n\ninterface CellState {\n  loading: boolean;\n  error: string | null;\n  order: string[];\n  data: {\n    [key: string]: Cell;\n  };\n}\n\nconst initialState: CellState = {\n  loading: false,\n  error: null,\n  order: [],\n  data: {},\n};\n\nexport default function reducer(\n  state: CellState = initialState,\n  action: Action\n): CellState {\n  switch (action.type) {\n    case ActionType.MOVE_CELL:\n      return state;\n    case ActionType.UPDATE_CELL:\n      const { id, content } = action.payload;\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [id]: {\n            ...state.data[id],\n            content,\n          },\n        },\n      };\n    case ActionType.INSERT_CELL_BEFORE:\n      return state;\n    case ActionType.DELETE_CELL:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}