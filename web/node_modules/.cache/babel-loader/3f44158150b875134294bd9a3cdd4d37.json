{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/components/preview.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport \"styles/preview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst html = `\n  <html>\n    <head></head>\n    <body>\n      <div id=\"root\"></div>\n      <script>\n        window.addEventListener('message', (event) => {\n          try {\n            eval(event.data);\n          } catch (err) {\n            const root = document.querySelector('#root');\n            root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n            console.error(err);\n          }\n        }, false);\n      </script>\n    </body>\n  </html>\n`;\n\nconst Preview = function ({\n  code\n}) {\n  _s();\n\n  const iframe = useRef();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    iframe.current.contentWindow.postMessage(code, \"*\");\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"preview\",\n      ref: iframe,\n      sandbox: \"allow-scripts\",\n      srcDoc: html,\n      style: {\n        backgroundColor: \"white\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Preview, \"GAFleWBZ6O+8Op7dBuDH6PzOglQ=\");\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/components/preview.tsx"],"names":["useEffect","useRef","html","Preview","code","iframe","current","srcdoc","contentWindow","postMessage","backgroundColor"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,oBAAP;;AAMA,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;;AAoBA,MAAMC,OAAwB,GAAG,UAAU;AAAEC,EAAAA;AAAF,CAAV,EAAoB;AAAA;;AACnD,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBL,IAAxB;AACAG,IAAAA,MAAM,CAACC,OAAP,CAAeE,aAAf,CAA6BC,WAA7B,CAAyCL,IAAzC,EAA+C,GAA/C;AACD,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,GAAG,EAAEC,MAFP;AAGE,MAAA,OAAO,EAAC,eAHV;AAIE,MAAA,MAAM,EAAEH,IAJV;AAKE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,eAAe,EAAE;AAAnB;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnBD;;GAAMP,O;;KAAAA,O;AAqBN,eAAeA,OAAf","sourcesContent":["import { useEffect, useRef } from \"react\";\nimport \"styles/preview.css\";\n\ninterface Props {\n  code: string;\n}\n\nconst html = `\n  <html>\n    <head></head>\n    <body>\n      <div id=\"root\"></div>\n      <script>\n        window.addEventListener('message', (event) => {\n          try {\n            eval(event.data);\n          } catch (err) {\n            const root = document.querySelector('#root');\n            root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n            console.error(err);\n          }\n        }, false);\n      </script>\n    </body>\n  </html>\n`;\n\nconst Preview: React.FC<Props> = function ({ code }) {\n  const iframe = useRef<any>();\n\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    iframe.current.contentWindow.postMessage(code, \"*\");\n  }, [code]);\n\n  return (\n    <div className=\"preview-wrapper\">\n      <iframe\n        title=\"preview\"\n        ref={iframe}\n        sandbox=\"allow-scripts\"\n        srcDoc={html}\n        style={{ backgroundColor: \"white\" }}\n      />\n    </div>\n  );\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}