{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/components/code-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CodeEditor from \"components/code-editor\";\nimport Preview from \"components/preview\";\nimport Resizable from \"components/resizable\";\nimport { bundle } from \"bundler\";\nimport { useActions } from \"hooks/use-actions\";\nimport \"bulmaswatch/superhero/bulmaswatch.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeCell = ({\n  cell\n}) => {\n  _s();\n\n  const {\n    updateCell\n  } = useActions(); // const { code, err } = useTypedSelector((state) => state.bundles[cell.id]);\n\n  const [code, setCode] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  useEffect(() => {\n    const timer = setTimeout(async () => {\n      const output = await bundle(cell.content);\n      setCode(output.code);\n      setErr(output.err);\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [cell.content]);\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"calc(100% - 10px)\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Resizable, {\n        direction: \"horizontal\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          initialValue: cell.content,\n          onChange: value => updateCell(cell.id, value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        code: code,\n        err: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodeCell, \"MZR2Pp7vhjLLuEi0GL6G55vK7oY=\", false, function () {\n  return [useActions];\n});\n\n_c = CodeCell;\nexport default CodeCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/components/code-cell.tsx"],"names":["React","useState","useEffect","CodeEditor","Preview","Resizable","bundle","useActions","CodeCell","cell","updateCell","code","setCode","err","setErr","timer","setTimeout","output","content","clearTimeout","height","display","flexDirection","value","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,MAAT,QAAuB,SAAvB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,2CAAP;;;AAOA,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAiBH,UAAU,EAAjC,CADsD,CAEtD;;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,KAAK,GAAGC,UAAU,CAAC,YAAY;AACnC,YAAMC,MAAM,GAAG,MAAMX,MAAM,CAACG,IAAI,CAACS,OAAN,CAA3B;AACAN,MAAAA,OAAO,CAACK,MAAM,CAAEN,IAAT,CAAP;AACAG,MAAAA,MAAM,CAACG,MAAM,CAAEJ,GAAT,CAAN;AACD,KAJuB,EAIrB,IAJqB,CAAxB;AAMA,WAAO,MAAM;AACXM,MAAAA,YAAY,CAACJ,KAAD,CAAZ;AACD,KAFD;AAGD,GAVQ,EAUN,CAACN,IAAI,CAACS,OAAN,CAVM,CAAT;AAYA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AACLE,QAAAA,MAAM,EAAE,mBADH;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,aAAa,EAAE;AAHV,OADT;AAAA,8BAOE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,YAAY,EAAEb,IAAI,CAACS,OADrB;AAEE,UAAA,QAAQ,EAAGK,KAAD,IAAWb,UAAU,CAACD,IAAI,CAACe,EAAN,EAAUD,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEZ,IAAf;AAAqB,QAAA,GAAG,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArCD;;GAAML,Q;UACmBD,U;;;KADnBC,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CodeEditor from \"components/code-editor\";\nimport Preview from \"components/preview\";\nimport Resizable from \"components/resizable\";\nimport { bundle } from \"bundler\";\nimport { Cell } from \"state\";\nimport { useActions } from \"hooks/use-actions\";\nimport \"bulmaswatch/superhero/bulmaswatch.min.css\";\nimport { useTypedSelector } from \"hooks/use-typed-selector\";\n\ninterface CodeCellProps {\n  cell: Cell;\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n  const { updateCell } = useActions();\n  // const { code, err } = useTypedSelector((state) => state.bundles[cell.id]);\n  const [code, setCode] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n\n  useEffect(() => {\n    const timer = setTimeout(async () => {\n      const output = await bundle(cell.content);\n      setCode(output!.code);\n      setErr(output!.err);\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [cell.content]);\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div\n        style={{\n          height: \"calc(100% - 10px)\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <Resizable direction=\"horizontal\">\n          <CodeEditor\n            initialValue={cell.content}\n            onChange={(value) => updateCell(cell.id, value)}\n          />\n        </Resizable>\n        <Preview code={code} err={err} />\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeCell;\n"]},"metadata":{},"sourceType":"module"}