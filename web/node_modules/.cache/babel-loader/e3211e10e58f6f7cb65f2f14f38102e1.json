{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/components/cell-list-item.tsx\";\nimport CodeCell from \"components/code-cell\";\nimport TextEditor from \"components/text-editor\";\nimport ActionBar from \"./action-bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CellListItem = ({\n  cell\n}) => {\n  let child;\n\n  if (cell.type === \"code\") {\n    child = /*#__PURE__*/_jsxDEV(CodeCell, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  } else {\n    child = /*#__PURE__*/_jsxDEV(TextEditor, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list-item\",\n    children: [/*#__PURE__*/_jsxDEV(ActionBar, {\n      id: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), child]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CellListItem;\nexport default CellListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellListItem\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/components/cell-list-item.tsx"],"names":["CodeCell","TextEditor","ActionBar","CellListItem","cell","child","type","id"],"mappings":";AACA,OAAOA,QAAP,MAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;;;AAMA,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9D,MAAIC,KAAJ;;AAEA,MAAID,IAAI,CAACE,IAAL,KAAc,MAAlB,EAA0B;AACxBD,IAAAA,KAAK,gBAAG,QAAC,QAAD;AAAU,MAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAR;AACD,GAFD,MAEO;AACLC,IAAAA,KAAK,gBAAG,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAEA,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAfD;;KAAMF,Y;AAiBN,eAAeA,YAAf","sourcesContent":["import { Cell } from \"state\";\nimport CodeCell from \"components/code-cell\";\nimport TextEditor from \"components/text-editor\";\nimport { JSXElement } from \"@babel/types\";\nimport ActionBar from \"./action-bar\";\n\ninterface CellListItemProps {\n  cell: Cell;\n}\n\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n  let child: JSX.Element;\n\n  if (cell.type === \"code\") {\n    child = <CodeCell cell={cell} />;\n  } else {\n    child = <TextEditor cell={cell} />;\n  }\n\n  return (\n    <div className=\"cell-list-item\">\n      <ActionBar id={cell.id} />\n      {child}\n    </div>\n  );\n};\n\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}