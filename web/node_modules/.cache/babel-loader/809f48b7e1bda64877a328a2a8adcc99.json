{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as esbuild from \"esbuild-wasm\";\nimport { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\nimport CodeEditor from \"./components/code-editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const ref = useRef();\n  const iframe = useRef();\n  const [input, setInput] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n\n  const startService = async () => {\n    ref.current = await esbuild.startService({\n      worker: true,\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\"\n    });\n  };\n\n  useEffect(() => {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!ref.current) {\n      return;\n    }\n\n    iframe.current.srcdoc = html;\n    const result = await ref.current.build({\n      entryPoints: [\"index.js\"],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n      define: {\n        \"process.env.NODE_ENV\": '\"production\"',\n        global: \"window\"\n      }\n    }); // setCode(result.outputFiles[0].text);\n\n    iframe.current.contentWindow.postMessage(result.outputFiles[0].text, \"*\");\n  };\n\n  const html = `\n    <html>\n      <head></head>\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          window.addEventListener('message', (event) => {\n            try {\n              eval(event.data);\n            } catch (err) {\n              const root = document.querySelector('#root');\n              root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n              console.error(err);\n            }\n          }, false);\n        </script>\n      </body>\n    </html>\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n      initialValue: \"const a = 1;\",\n      onChange: value => setInput(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"code output\",\n      ref: iframe,\n      sandbox: \"allow-scripts\",\n      srcDoc: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fjymrt0qpjaFPVaWUi4+kWxfDfU=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 90,\n  columnNumber: 17\n}, this), document.querySelector(\"#root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/index.tsx"],"names":["esbuild","useState","useEffect","useRef","ReactDOM","unpkgPathPlugin","fetchPlugin","CodeEditor","App","ref","iframe","input","setInput","code","setCode","startService","current","worker","wasmURL","onClick","srcdoc","html","result","build","entryPoints","bundle","write","plugins","define","global","contentWindow","postMessage","outputFiles","text","value","e","target","render","document","querySelector"],"mappings":"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","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\nimport { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\nimport CodeEditor from \"./components/code-editor\";\n\nconst App = () => {\n  const ref = useRef<any>();\n  const iframe = useRef<any>();\n  const [input, setInput] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n\n  const startService = async () => {\n    ref.current = await esbuild.startService({\n      worker: true,\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\",\n    });\n  };\n  useEffect(() => {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!ref.current) {\n      return;\n    }\n\n    iframe.current.srcdoc = html;\n\n    const result = await ref.current.build({\n      entryPoints: [\"index.js\"],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n      define: {\n        \"process.env.NODE_ENV\": '\"production\"',\n        global: \"window\",\n      },\n    });\n\n    // setCode(result.outputFiles[0].text);\n    iframe.current.contentWindow.postMessage(result.outputFiles[0].text, \"*\");\n  };\n\n  const html = `\n    <html>\n      <head></head>\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          window.addEventListener('message', (event) => {\n            try {\n              eval(event.data);\n            } catch (err) {\n              const root = document.querySelector('#root');\n              root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n              console.error(err);\n            }\n          }, false);\n        </script>\n      </body>\n    </html>\n  `;\n\n  return (\n    <div>\n      <CodeEditor\n        initialValue=\"const a = 1;\"\n        onChange={(value) => setInput(value)}\n      />\n      <textarea\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      ></textarea>\n      <div>\n        <button onClick={onClick}>Submit</button>\n      </div>\n      <pre>{code}</pre>\n      <iframe\n        title=\"code output\"\n        ref={iframe}\n        sandbox=\"allow-scripts\"\n        srcDoc={html}\n      />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}