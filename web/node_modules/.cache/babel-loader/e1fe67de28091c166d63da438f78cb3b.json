{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/components/resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\nimport \"styles/resizable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = function ({\n  direction,\n  children\n}) {\n  _s();\n\n  let resizableProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    let timer;\n\n    const listener = function () {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      timer = setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n      }, 100);\n    };\n\n    window.addEventListener(\"resize\", listener);\n    return function () {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, []);\n\n  if (direction === \"horizontal\") {\n    resizableProps = {\n      className: \"resize-horizontal\",\n      height: Infinity,\n      width: innerWidth * 0.75,\n      resizeHandles: [\"e\"],\n      minConstraints: [innerWidth * 0.2, Infinity],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      onResizeStop: (event, data) => {\n        console.log(data);\n      }\n    };\n  } else {\n    resizableProps = {\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n      maxConstraints: [Infinity, innerHeight * 0.95],\n      minConstraints: [Infinity, 48]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Resizable, \"pP7Dsp6ebnNv2hiUMMicRYhA838=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/components/resizable.tsx"],"names":["React","useEffect","useState","ResizableBox","Resizable","direction","children","resizableProps","innerHeight","setInnerHeight","window","innerWidth","setInnerWidth","timer","listener","clearTimeout","setTimeout","addEventListener","removeEventListener","className","height","Infinity","width","resizeHandles","minConstraints","maxConstraints","onResizeStop","event","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAAgD,iBAAhD;AACA,OAAO,sBAAP;;;AAMA,MAAMC,SAAmC,GAAG,UAAU;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAV,EAAmC;AAAA;;AAC7E,MAAIC,cAAJ;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACQ,MAAM,CAACF,WAAR,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACQ,MAAM,CAACC,UAAR,CAA5C;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,KAAJ;;AAEA,UAAMC,QAAQ,GAAG,YAAY;AAC3B,UAAID,KAAJ,EAAW;AACTE,QAAAA,YAAY,CAACF,KAAD,CAAZ;AACD;;AACDA,MAAAA,KAAK,GAAGG,UAAU,CAAC,MAAM;AACvBP,QAAAA,cAAc,CAACC,MAAM,CAACF,WAAR,CAAd;AACAI,QAAAA,aAAa,CAACF,MAAM,CAACC,UAAR,CAAb;AACD,OAHiB,EAGf,GAHe,CAAlB;AAID,KARD;;AASAD,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AAEA,WAAO,YAAY;AACjBJ,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC;AACD,KAFD;AAGD,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAIT,SAAS,KAAK,YAAlB,EAAgC;AAC9BE,IAAAA,cAAc,GAAG;AACfY,MAAAA,SAAS,EAAE,mBADI;AAEfC,MAAAA,MAAM,EAAEC,QAFO;AAGfC,MAAAA,KAAK,EAAEX,UAAU,GAAG,IAHL;AAIfY,MAAAA,aAAa,EAAE,CAAC,GAAD,CAJA;AAKfC,MAAAA,cAAc,EAAE,CAACb,UAAU,GAAG,GAAd,EAAmBU,QAAnB,CALD;AAMfI,MAAAA,cAAc,EAAE,CAACd,UAAU,GAAG,IAAd,EAAoBU,QAApB,CAND;AAOfK,MAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;AATc,KAAjB;AAWD,GAZD,MAYO;AACLrB,IAAAA,cAAc,GAAG;AACfa,MAAAA,MAAM,EAAE,GADO;AAEfE,MAAAA,KAAK,EAAED,QAFQ;AAGfE,MAAAA,aAAa,EAAE,CAAC,GAAD,CAHA;AAIfE,MAAAA,cAAc,EAAE,CAACJ,QAAD,EAAWb,WAAW,GAAG,IAAzB,CAJD;AAKfgB,MAAAA,cAAc,EAAE,CAACH,QAAD,EAAW,EAAX;AALD,KAAjB;AAOD;;AAED,sBAAO,QAAC,YAAD,OAAkBd,cAAlB;AAAA,cAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/CD;;GAAMF,S;;KAAAA,S;AAiDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\nimport \"styles/resizable.css\";\n\ninterface ResizableProps {\n  direction: \"horizontal\" | \"vertical\";\n}\n\nconst Resizable: React.FC<ResizableProps> = function ({ direction, children }) {\n  let resizableProps: ResizableBoxProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    let timer: any;\n\n    const listener = function () {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n      }, 100);\n    };\n    window.addEventListener(\"resize\", listener);\n\n    return function () {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, []);\n\n  if (direction === \"horizontal\") {\n    resizableProps = {\n      className: \"resize-horizontal\",\n      height: Infinity,\n      width: innerWidth * 0.75,\n      resizeHandles: [\"e\"],\n      minConstraints: [innerWidth * 0.2, Infinity],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      onResizeStop: (event, data) => {\n        console.log(data);\n      },\n    };\n  } else {\n    resizableProps = {\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n      maxConstraints: [Infinity, innerHeight * 0.95],\n      minConstraints: [Infinity, 48],\n    };\n  }\n\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}