{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/components/add-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useActions } from \"hooks/use-actions\";\nimport \"styles/add-cell.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCell = ({\n  nextCellId\n}) => {\n  _s();\n\n  const {\n    insertCellBefore\n  } = useActions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => insertCellBefore(nextCellId, \"code\"),\n      children: \"code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => insertCellBefore(nextCellId, \"markdown\"),\n      children: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCell, \"WCeYMonidkUsrU82gdQi6l0Xt4c=\", false, function () {\n  return [useActions];\n});\n\n_c = AddCell;\nexport default AddCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCell\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/components/add-cell.tsx"],"names":["React","useActions","AddCell","nextCellId","insertCellBefore"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,qBAAP;;;AAMA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAuBH,UAAU,EAAvC;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMG,gBAAgB,CAACD,UAAD,EAAa,MAAb,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACD,UAAD,EAAa,UAAb,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXD;;GAAMD,O;UACyBD,U;;;KADzBC,O;AAaN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport { useActions } from \"hooks/use-actions\";\nimport \"styles/add-cell.css\";\n\ninterface AddCellProps {\n  nextCellId: string | null;\n}\n\nconst AddCell: React.FC<AddCellProps> = ({ nextCellId }) => {\n  const { insertCellBefore } = useActions();\n\n  return (\n    <div>\n      <button onClick={() => insertCellBefore(nextCellId, \"code\")}>code</button>\n      <button onClick={() => insertCellBefore(nextCellId, \"markdown\")}>\n        text\n      </button>\n    </div>\n  );\n};\n\nexport default AddCell;\n"]},"metadata":{},"sourceType":"module"}