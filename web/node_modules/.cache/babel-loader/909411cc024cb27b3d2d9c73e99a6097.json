{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/components/add-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useActions } from \"hooks/use-actions\";\nimport \"styles/add-cell.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCell = ({\n  nextCellId,\n  forceVisible\n}) => {\n  _s();\n\n  const {\n    insertCellBefore\n  } = useActions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `add-cell ${forceVisible && \"force-visible\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-rounded is-primary is-small\",\n        onClick: () => insertCellBefore(nextCellId, \"code\"),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-rounded is-primary is-small\",\n        onClick: () => insertCellBefore(nextCellId, \"markdown\"),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"markdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCell, \"WCeYMonidkUsrU82gdQi6l0Xt4c=\", false, function () {\n  return [useActions];\n});\n\n_c = AddCell;\nexport default AddCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCell\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/components/add-cell.tsx"],"names":["React","useActions","AddCell","nextCellId","forceVisible","insertCellBefore"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,qBAAP;;;AAOA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AAAA;;AACxE,QAAM;AAAEC,IAAAA;AAAF,MAAuBJ,UAAU,EAAvC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,YAAWG,YAAY,IAAI,eAAgB,EAA5D;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,uCADZ;AAEE,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACF,UAAD,EAAa,MAAb,CAFjC;AAAA,gCAIE;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AACE,QAAA,SAAS,EAAC,uCADZ;AAEE,QAAA,OAAO,EAAE,MAAME,gBAAgB,CAACF,UAAD,EAAa,UAAb,CAFjC;AAAA,gCAIE;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAsBE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA7BD;;GAAMD,O;UACyBD,U;;;KADzBC,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport { useActions } from \"hooks/use-actions\";\nimport \"styles/add-cell.css\";\n\ninterface AddCellProps {\n  nextCellId: string | null;\n  forceVisible?: boolean;\n}\n\nconst AddCell: React.FC<AddCellProps> = ({ nextCellId, forceVisible }) => {\n  const { insertCellBefore } = useActions();\n\n  return (\n    <div className={`add-cell ${forceVisible && \"force-visible\"}`}>\n      <div className=\"add-buttons\">\n        <button\n          className=\"button is-rounded is-primary is-small\"\n          onClick={() => insertCellBefore(nextCellId, \"code\")}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-plus\"></i>\n          </span>\n          <span>code</span>\n        </button>\n\n        <button\n          className=\"button is-rounded is-primary is-small\"\n          onClick={() => insertCellBefore(nextCellId, \"markdown\")}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-plus\"></i>\n          </span>\n          <span>markdown</span>\n        </button>\n      </div>\n      <div className=\"divider\"></div>\n    </div>\n  );\n};\n\nexport default AddCell;\n"]},"metadata":{},"sourceType":"module"}