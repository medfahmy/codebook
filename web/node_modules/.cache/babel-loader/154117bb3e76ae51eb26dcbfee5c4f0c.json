{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/components/text-editor.tsx\",\n    _s = $RefreshSig$();\n\nimport MDEditor from \"@uiw/react-md-editor\";\nimport { useActions } from \"hooks/use-actions\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"styles/text-editor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextEditor = ({\n  cell\n}) => {\n  _s();\n\n  const {\n    updateCell\n  } = useActions();\n  const ref = useRef(null);\n  const [editing, setEditing] = useState(false);\n  useEffect(() => {\n    const listener = event => {\n      if (ref.current && event.target && ref.current.contains(event.target)) {\n        return;\n      }\n\n      setEditing(false);\n    };\n\n    document.addEventListener(\"click\", listener, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener(\"click\", listener, {\n        capture: true\n      });\n    };\n  }, []);\n\n  if (editing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-editor\",\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(MDEditor, {\n        value: cell.content,\n        onChange: v => updateCell(cell.id, v || \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-editor card\",\n    onClick: () => setEditing(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(MDEditor.Markdown, {\n        source: cell.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextEditor, \"FshI2BnNe2VPF5cDR2OlPv0Fm4A=\", false, function () {\n  return [useActions];\n});\n\n_c = TextEditor;\nexport default TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/components/text-editor.tsx"],"names":["MDEditor","useActions","React","useEffect","useRef","useState","TextEditor","cell","updateCell","ref","editing","setEditing","listener","event","current","target","contains","document","addEventListener","capture","removeEventListener","content","v","id"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,wBAAP;;;AAMA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAiBP,UAAU,EAAjC;AACA,QAAMQ,GAAG,GAAGL,MAAM,CAAwB,IAAxB,CAAlB;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAIC,KAAD,IAAuB;AACtC,UACEJ,GAAG,CAACK,OAAJ,IACAD,KAAK,CAACE,MADN,IAEAN,GAAG,CAACK,OAAJ,CAAYE,QAAZ,CAAqBH,KAAK,CAACE,MAA3B,CAHF,EAIE;AACA;AACD;;AAEDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVD;;AAWAM,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,QAAnC,EAA6C;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAA7C;AAEA,WAAO,MAAM;AACXF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCR,QAAtC,EAAgD;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAAhD;AACD,KAFD;AAGD,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAIT,OAAJ,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAED,GAAlC;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEF,IAAI,CAACc,OADd;AAEE,QAAA,QAAQ,EAAGC,CAAD,IAAOd,UAAU,CAACD,IAAI,CAACgB,EAAN,EAAUD,CAAC,IAAI,EAAf;AAF7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,OAAO,EAAE,MAAMX,UAAU,CAAC,IAAD,CAA3D;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,QAAD,CAAU,QAAV;AAAmB,QAAA,MAAM,EAAEJ,IAAI,CAACc;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1CD;;GAAMf,U;UACmBL,U;;;KADnBK,U;AA4CN,eAAeA,UAAf","sourcesContent":["import MDEditor from \"@uiw/react-md-editor\";\nimport { useActions } from \"hooks/use-actions\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Cell } from \"state\";\nimport \"styles/text-editor.css\";\n\ninterface TextEditorProps {\n  cell: Cell;\n}\n\nconst TextEditor: React.FC<TextEditorProps> = ({ cell }) => {\n  const { updateCell } = useActions();\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (\n        ref.current &&\n        event.target &&\n        ref.current.contains(event.target as Node)\n      ) {\n        return;\n      }\n\n      setEditing(false);\n    };\n    document.addEventListener(\"click\", listener, { capture: true });\n\n    return () => {\n      document.removeEventListener(\"click\", listener, { capture: true });\n    };\n  }, []);\n\n  if (editing) {\n    return (\n      <div className=\"text-editor\" ref={ref}>\n        <MDEditor\n          value={cell.content}\n          onChange={(v) => updateCell(cell.id, v || \"\")}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"text-editor card\" onClick={() => setEditing(true)}>\n      <div className=\"card-content\">\n        <MDEditor.Markdown source={cell.content} />\n      </div>\n    </div>\n  );\n};\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}