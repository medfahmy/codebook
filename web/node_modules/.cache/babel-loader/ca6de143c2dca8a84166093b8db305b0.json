{"ast":null,"code":"import { ActionType } from \"state/action-types\";\nexport const moveCell = (id, direction) => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction\n    }\n  };\n};\nexport const updateCell = (id, content) => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content\n    }\n  };\n};\nexport const insertCellBefore = (id, cellType) => {\n  return {\n    type: ActionType.INSERT_CELL_BEFORE,\n    payload: {\n      id,\n      type: cellType\n    }\n  };\n};\nexport const deleteCell = id => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id\n  };\n};","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/state/action-creators/index.ts"],"names":["ActionType","moveCell","id","direction","type","MOVE_CELL","payload","updateCell","content","UPDATE_CELL","insertCellBefore","cellType","INSERT_CELL_BEFORE","deleteCell","DELETE_CELL"],"mappings":"AAAA,SAASA,UAAT,QAA2B,oBAA3B;AAUA,OAAO,MAAMC,QAAQ,GAAG,CAACC,EAAD,EAAaC,SAAb,KAAsD;AAC5E,SAAO;AACLC,IAAAA,IAAI,EAAEJ,UAAU,CAACK,SADZ;AAELC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EADO;AAEPC,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAMI,UAAU,GAAG,CAACL,EAAD,EAAaM,OAAb,KAAmD;AAC3E,SAAO;AACLJ,IAAAA,IAAI,EAAEJ,UAAU,CAACS,WADZ;AAELH,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EADO;AAEPM,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAME,gBAAgB,GAAG,CAC9BR,EAD8B,EAE9BS,QAF8B,KAGH;AAC3B,SAAO;AACLP,IAAAA,IAAI,EAAEJ,UAAU,CAACY,kBADZ;AAELN,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EADO;AAEPE,MAAAA,IAAI,EAAEO;AAFC;AAFJ,GAAP;AAOD,CAXM;AAaP,OAAO,MAAME,UAAU,GAAIX,EAAD,IAAkC;AAC1D,SAAO;AACLE,IAAAA,IAAI,EAAEJ,UAAU,CAACc,WADZ;AAELR,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { ActionType } from \"state/action-types\";\nimport {\n  Direction,\n  DeleteCellAction,\n  InsertCellBeforeAction,\n  MoveCellAction,\n  UpdateCellAction,\n} from \"state/actions\";\nimport { CellType } from \"state/cell\";\n\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction,\n    },\n  };\n};\n\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content,\n    },\n  };\n};\n\nexport const insertCellBefore = (\n  id: string | null,\n  cellType: CellType\n): InsertCellBeforeAction => {\n  return {\n    type: ActionType.INSERT_CELL_BEFORE,\n    payload: {\n      id,\n      type: cellType,\n    },\n  };\n};\n\nexport const deleteCell = (id: string): DeleteCellAction => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}