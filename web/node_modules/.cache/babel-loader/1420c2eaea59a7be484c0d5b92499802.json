{"ast":null,"code":"import * as esbuild from \"esbuild-wasm\";\nimport { unpkgPathPlugin } from \"bundler/plugins/unpkg-path-plugin\";\nimport { fetchPlugin } from \"bundler/plugins/fetch-plugin\";\nlet service;\nexport const bundle = async function (code) {\n  if (!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\"\n    });\n  }\n\n  try {\n    const result = await service.build({\n      entryPoints: [\"index.js\"],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(code)],\n      define: {\n        \"process.env.NODE_ENV\": '\"production\"',\n        global: \"window\"\n      },\n      jsxFactory: \"_React.createElement\",\n      jsxFragment: \"_React.Fragment\"\n    });\n    return {\n      code: result.outputFiles[0].text,\n      err: \"\"\n    };\n  } catch (err) {\n    return {\n      code: \"\",\n      err: err.message\n    };\n  }\n};","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/bundler/index.ts"],"names":["esbuild","unpkgPathPlugin","fetchPlugin","service","bundle","code","startService","worker","wasmURL","result","build","entryPoints","write","plugins","define","global","jsxFactory","jsxFragment","outputFiles","text","err","message"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AAEA,IAAIC,OAAJ;AAEA,OAAO,MAAMC,MAAM,GAAG,gBAAgBC,IAAhB,EAA8B;AAClD,MAAI,CAACF,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG,MAAMH,OAAO,CAACM,YAAR,CAAqB;AACnCC,MAAAA,MAAM,EAAE,IAD2B;AAEnCC,MAAAA,OAAO,EAAE;AAF0B,KAArB,CAAhB;AAID;;AAED,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMN,OAAO,CAACO,KAAR,CAAc;AACjCC,MAAAA,WAAW,EAAE,CAAC,UAAD,CADoB;AAEjCP,MAAAA,MAAM,EAAE,IAFyB;AAGjCQ,MAAAA,KAAK,EAAE,KAH0B;AAIjCC,MAAAA,OAAO,EAAE,CAACZ,eAAe,EAAhB,EAAoBC,WAAW,CAACG,IAAD,CAA/B,CAJwB;AAKjCS,MAAAA,MAAM,EAAE;AACN,gCAAwB,cADlB;AAENC,QAAAA,MAAM,EAAE;AAFF,OALyB;AASjCC,MAAAA,UAAU,EAAE,sBATqB;AAUjCC,MAAAA,WAAW,EAAE;AAVoB,KAAd,CAArB;AAaA,WAAO;AACLZ,MAAAA,IAAI,EAAEI,MAAM,CAACS,WAAP,CAAmB,CAAnB,EAAsBC,IADvB;AAELC,MAAAA,GAAG,EAAE;AAFA,KAAP;AAID,GAlBD,CAkBE,OAAOA,GAAP,EAAY;AACZ,WAAO;AACLf,MAAAA,IAAI,EAAE,EADD;AAELe,MAAAA,GAAG,EAAEA,GAAG,CAACC;AAFJ,KAAP;AAID;AACF,CAhCM","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\nimport { unpkgPathPlugin } from \"bundler/plugins/unpkg-path-plugin\";\nimport { fetchPlugin } from \"bundler/plugins/fetch-plugin\";\n\nlet service: esbuild.Service;\n\nexport const bundle = async function (code: string) {\n  if (!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\",\n    });\n  }\n\n  try {\n    const result = await service.build({\n      entryPoints: [\"index.js\"],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(code)],\n      define: {\n        \"process.env.NODE_ENV\": '\"production\"',\n        global: \"window\",\n      },\n      jsxFactory: \"_React.createElement\",\n      jsxFragment: \"_React.Fragment\",\n    });\n\n    return {\n      code: result.outputFiles[0].text,\n      err: \"\",\n    };\n  } catch (err) {\n    return {\n      code: \"\",\n      err: err.message,\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}