{"ast":null,"code":"var _jsxFileName = \"/home/mfahmy/workspace/react/codebook/src/components/code-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CodeEditor from \"components/code-editor\";\nimport Preview from \"components/preview\";\nimport Resizable from \"components/resizable\";\nimport { useActions } from \"hooks/use-actions\";\nimport \"bulmaswatch/superhero/bulmaswatch.min.css\";\nimport { useTypedSelector } from \"hooks/use-typed-selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeCell = ({\n  cell\n}) => {\n  _s();\n\n  const {\n    updateCell\n  } = useActions();\n  const {\n    code,\n    err\n  } = useTypedSelector(state => state.bundles[cell.id]); // const [code, setCode] = useState(\"\");\n  // const [err, setErr] = useState(\"\");\n  // useEffect(() => {\n  //   const timer = setTimeout(async () => {\n  //     const output = await bundle(cell.content);\n  //     setCode(output!.code);\n  //     setErr(output!.err);\n  //   }, 1000);\n  //   return () => {\n  //     clearTimeout(timer);\n  //   };\n  // }, [cell.content]);\n\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"calc(100% - 10px)\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Resizable, {\n        direction: \"horizontal\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          initialValue: cell.content,\n          onChange: value => updateCell(cell.id, value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        code: code,\n        err: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodeCell, \"ccM1wjqPeEOXzu1bmqV3bWF8DZU=\", false, function () {\n  return [useActions, useTypedSelector];\n});\n\n_c = CodeCell;\nexport default CodeCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"sources":["/home/mfahmy/workspace/react/codebook/src/components/code-cell.tsx"],"names":["React","CodeEditor","Preview","Resizable","useActions","useTypedSelector","CodeCell","cell","updateCell","code","err","state","bundles","id","height","display","flexDirection","content","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAGA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,2CAAP;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;;AAMA,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAiBJ,UAAU,EAAjC;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBL,gBAAgB,CAAEM,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcL,IAAI,CAACM,EAAnB,CAAZ,CAAtC,CAFsD,CAItD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,mBADH;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,aAAa,EAAE;AAHV,OADT;AAAA,8BAOE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,YAAY,EAAET,IAAI,CAACU,OADrB;AAEE,UAAA,QAAQ,EAAGC,KAAD,IAAWV,UAAU,CAACD,IAAI,CAACM,EAAN,EAAUK,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAET,IAAf;AAAqB,QAAA,GAAG,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtCD;;GAAMJ,Q;UACmBF,U,EACDC,gB;;;KAFlBC,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CodeEditor from \"components/code-editor\";\nimport Preview from \"components/preview\";\nimport Resizable from \"components/resizable\";\nimport { bundle } from \"bundler\";\nimport { Cell } from \"state\";\nimport { useActions } from \"hooks/use-actions\";\nimport \"bulmaswatch/superhero/bulmaswatch.min.css\";\nimport { useTypedSelector } from \"hooks/use-typed-selector\";\n\ninterface CodeCellProps {\n  cell: Cell;\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n  const { updateCell } = useActions();\n  const { code, err } = useTypedSelector((state) => state.bundles[cell.id]);\n\n  // const [code, setCode] = useState(\"\");\n  // const [err, setErr] = useState(\"\");\n\n  // useEffect(() => {\n  //   const timer = setTimeout(async () => {\n  //     const output = await bundle(cell.content);\n  //     setCode(output!.code);\n  //     setErr(output!.err);\n  //   }, 1000);\n\n  //   return () => {\n  //     clearTimeout(timer);\n  //   };\n  // }, [cell.content]);\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div\n        style={{\n          height: \"calc(100% - 10px)\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <Resizable direction=\"horizontal\">\n          <CodeEditor\n            initialValue={cell.content}\n            onChange={(value) => updateCell(cell.id, value)}\n          />\n        </Resizable>\n        <Preview code={code} err={err} />\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeCell;\n"]},"metadata":{},"sourceType":"module"}